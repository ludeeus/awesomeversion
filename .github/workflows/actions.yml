name: Actions

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 🛠 Set up Python 3
        uses: actions/setup-python@v2
        id: python
        with:
          python-version: 3.x

      - name: 📦 Install dependencies
        run:  make requirements

      - name: 🖤 Lint with Black
        run:  black . --check

  test:
    name: Test with Python ${{ matrix.python-version }}
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2

      - name: 🛠️ Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install dependencies
        run:  make requirements

      - name: 🏃 Run tests
        run:  make test

      - name: 📤 Upload coverage to Codecov
        if: ${{ matrix.python-version == '3.8' }}
        run: |
          make coverage
          curl -sfSL https://codecov.io/bash | bash -

  release-drafter:
    name: Release Drafter
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: ⏭️ Get next version
        id: version
        run: |
          declare -i newpost
          latest=$(git describe --tags $(git rev-list --tags --max-count=1))
          latestpre=$(echo "$latest" | awk '{split($0,a,"."); print a[1] "." a[2]}')
          datepre=$(date --utc '+%y.%m')
          if [[ "$latestpre" == "$datepre" ]]; then
              latestpost=$(echo "$latest" | awk '{split($0,a,"."); print a[3]}')
              newpost=$latestpost+1
          else
              newpost=0
          fi
          echo Current version:    $latest
          echo New target version: $datepre.$newpost
          echo "::set-output name=version::$datepre.$newpost"

      - name: 🏃 Run Release Drafter
        uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ steps.version.outputs.version }}
          name: ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}